{"version":3,"sources":["components/Directory.jsx","App.js","reportWebVitals.js","index.js"],"names":["Directory","state","data","filterData","employeeData","axios","get","then","response","console","log","results","setState","catch","err","handleSearch","event","preventDefault","searchName","target","value","newName","filter","name","first","indexOf","handleSort","sortedData","sort","a","b","this","className","type","class","onChange","placeholder","aria-describedby","scope","onClick","map","user","src","picture","medium","last","login","uuid","phone","href","email","dob","age","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuIeA,G,kNAjIbC,MAAQ,CACNC,KAAM,GACNC,WAAY,I,EASdC,aAAe,WACbC,IACGC,IAAI,gDACJC,MAAK,SAACC,GACLC,QAAQC,IAAIF,EAASN,KAAKS,SAC1B,EAAKC,SAAS,CACZV,KAAMM,EAASN,KAAKS,QACpBR,WAAYK,EAASN,KAAKS,aAG7BE,OAAM,SAACC,GACN,GAAIA,EAAK,MAAMA,M,EAMrBC,aAAe,SAACC,GACdA,EAAMC,iBAEN,IAAIC,EAAaF,EAAMG,OAAOC,MAE1BC,EAAU,EAAKpB,MAAMC,KAAKoB,QAC5B,SAACC,GAAD,OAAmD,IAAzCA,EAAKA,KAAKC,MAAMC,QAAQP,MAGpC,EAAKN,SAAS,CACZT,WAAYkB,K,EAKhBK,WAAa,WACXjB,QAAQC,IAAI,uBAGZ,IAAIiB,EAAa,EAAK1B,MAAMC,KAAK0B,MAAK,SAACC,EAAGC,GACxC,OAAOD,EAAEN,KAAKC,MAAQM,EAAEP,KAAKC,OAAS,EAAI,KAE5Cf,QAAQC,IAAIiB,GACZ,EAAKf,SAAS,CACZT,WAAYwB,K,kEA7CdI,KAAK3B,iB,+BAmDL,OACE,qCACE,sBAAK4B,UAAU,kBAAf,UACG,IACD,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,aACf,sBAAKA,UAAU,uBAAf,UACE,oDACA,uBACA,6FAIN,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,aACf,sBAAKA,UAAU,wBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,SACE,uBACEC,KAAK,OACLC,MAAM,4BACNC,SAAUJ,KAAKhB,aACfqB,YAAY,sBACZC,mBAAiB,mCAKvB,wBAAOL,UAAU,mBAAjB,UACE,gCACE,+BACE,oBAAIM,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAMC,QAASR,KAAKL,WAA9B,kBAGA,oBAAIY,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBAGJ,gCACGP,KAAK9B,MAAME,WAAWqC,KAAI,SAACC,GAE1B,OACE,+BACE,oBAAIH,MAAM,MAAV,SACE,qBAAKI,IAAKD,EAAKE,QAAQC,WAEzB,6BACGH,EAAKlB,KAAKC,MAAQ,IAAMiB,EAAKlB,KAAKsB,MAD5BJ,EAAKK,MAAMC,MAGpB,6BAAKN,EAAKO,QACV,6BACE,mBAAGC,KAAK,GAAR,SAAYR,EAAKS,UAEnB,6BAAKT,EAAKU,IAAIC,gC,GArHdC,cCMTC,MARf,WACE,OACE,qBAAKtB,UAAU,MAAf,SACA,cAAC,EAAD,OCOWuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlD,MAAK,YAAkD,IAA/CmD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b215d5c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./directory.css\";\n\nclass Directory extends Component {\n  // set state to work with\n  state = {\n    data: [],\n    filterData: [],\n  };\n\n  // trigger emplpyee data on page load\n  componentDidMount() {\n    this.employeeData();\n  }\n\n  // make a get request to get random employee data\n  employeeData = () => {\n    axios\n      .get(\"https://randomuser.me/api/?results=80&nat=us\")\n      .then((response) => {\n        console.log(response.data.results);\n        this.setState({\n          data: response.data.results,\n          filterData: response.data.results,\n        });\n      })\n      .catch((err) => {\n        if (err) throw err;\n      });\n  };\n\n  // handle input search field and update state\n  // this.state.filter to sort the data with the new name\n  handleSearch = (event) => {\n    event.preventDefault();\n    // console.log(event.target.value);\n    let searchName = event.target.value;\n    // let newName = this.state.data.filter((name) => name.name.first === searchName);\n    let newName = this.state.data.filter(\n      (name) => name.name.first.indexOf(searchName) !== -1\n    );\n    // console.log(newName);\n    this.setState({\n      filterData: newName,\n    });\n  };\n\n  // handleSort function to take in the on Change function\n  handleSort = () => {\n    console.log(\"clicked handle sort\");\n    // let sortedData\n    // google how to sort an array\n    let sortedData = this.state.data.sort((a, b) => {\n      return a.name.first < b.name.first ? -1 : 1;\n    });\n    console.log(sortedData);\n    this.setState({\n      filterData: sortedData,\n    });\n  };\n\n  // setup page to pass on to App.js\n  render() {\n    return (\n      <>\n        <div className=\"container-fluid\">\n          {\" \"}\n          <div className=\"row header-row\">\n            <div className=\"col-sm-3\" />\n            <div className=\"col-sm-6 text-center\">\n              <h1>Employee Directory</h1>\n              <hr></hr>\n              <h5>Search by first name or sort by clicking on 'Name'</h5>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-fluid\">\n          <div className=\"row main-page\">\n            <div className=\"col-sm-1\" />\n            <div className=\"col-sm-10 text-center\">\n              <div className=\"search-bar row\">\n                <div className=\"col-sm-3\" />\n                <div className=\"col-sm-3\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control input-search\"\n                    onChange={this.handleSearch}\n                    placeholder=\"Search for employee\"\n                    aria-describedby=\"inputGroup-sizing-default\"\n                  />\n                </div>\n              </div>\n\n              <table className=\"table table-dark\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\" onClick={this.handleSort}>\n                      Name\n                    </th>\n                    <th scope=\"col\">Phone</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Age</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.filterData.map((user) => {\n                    // console.log(user);\n                    return (\n                      <tr>\n                        <th scope=\"row\">\n                          <img src={user.picture.medium} />\n                        </th>\n                        <td key={user.login.uuid}>\n                          {user.name.first + \" \" + user.name.last}\n                        </td>\n                        <td>{user.phone}</td>\n                        <td>\n                          <a href=\"\">{user.email}</a>\n                        </td>\n                        <td>{user.dob.age}</td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Directory;\n","import Directory from \"./components/Directory\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Directory/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}